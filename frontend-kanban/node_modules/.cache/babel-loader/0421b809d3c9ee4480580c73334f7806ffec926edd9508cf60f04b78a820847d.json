{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guilherme Santos\\\\Desktop\\\\kanban\\\\Title unclear01\\\\frontend-kanban\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/api';\nfunction App() {\n  _s();\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    axios.get(`${API_URL}/board`).then(response => {\n      setColumns(response.data);\n    });\n  }, []);\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n\n    // Se moveu para a mesma posição\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const sourceCol = columns.find(col => col.id.toString() === source.droppableId);\n    const destCol = columns.find(col => col.id.toString() === destination.droppableId);\n    const sourceCards = [...sourceCol.cards];\n    const [removed] = sourceCards.splice(source.index, 1);\n\n    // Movendo dentro da mesma coluna\n    if (source.droppableId === destination.droppableId) {\n      sourceCards.splice(destination.index, 0, removed);\n      const newColumns = columns.map(col => col.id.toString() === source.droppableId ? {\n        ...col,\n        cards: sourceCards\n      } : col);\n      setColumns(newColumns);\n      // Aqui faríamos a chamada à API para persistir a nova ordem\n    } else {\n      // Movendo para outra coluna\n      const destCards = [...destCol.cards];\n      destCards.splice(destination.index, 0, removed);\n      const newColumns = columns.map(col => {\n        if (col.id.toString() === source.droppableId) return {\n          ...col,\n          cards: sourceCards\n        };\n        if (col.id.toString() === destination.droppableId) return {\n          ...col,\n          cards: destCards\n        };\n        return col;\n      });\n      setColumns(newColumns);\n\n      // Salva a mudança no backend\n      axios.put(`${API_URL}/cards/${removed.id}/move`, {\n        newColumnId: destination.droppableId,\n        newOrder: destination.index\n      }).catch(err => console.error(\"Failed to move card\", err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex p-4 space-x-4\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id.toString(),\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"bg-gray-200 p-3 rounded-lg w-72 flex-shrink-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold mb-3\",\n            children: column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), column.cards.map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: card.id.toString(),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"bg-white p-2 mb-2 rounded shadow\",\n              children: card.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 23\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FGb4ECZkue8/xp6oBDaPDOM3qWY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","API_URL","App","_s","columns","setColumns","get","then","response","data","onDragEnd","result","source","destination","droppableId","index","sourceCol","find","col","id","toString","destCol","sourceCards","cards","removed","splice","newColumns","map","destCards","put","newColumnId","newOrder","catch","err","console","error","className","children","column","provided","droppableProps","ref","innerRef","title","fileName","_jsxFileName","lineNumber","columnNumber","card","draggableId","draggableProps","dragHandleProps","content","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Guilherme Santos/Desktop/kanban/Title unclear01/frontend-kanban/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst API_URL = 'http://localhost:3001/api';\n\nfunction App() {\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${API_URL}/board`).then(response => {\n      setColumns(response.data);\n    });\n  }, []);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    // Se moveu para a mesma posição\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const sourceCol = columns.find(col => col.id.toString() === source.droppableId);\n    const destCol = columns.find(col => col.id.toString() === destination.droppableId);\n    const sourceCards = [...sourceCol.cards];\n    const [removed] = sourceCards.splice(source.index, 1);\n\n    // Movendo dentro da mesma coluna\n    if (source.droppableId === destination.droppableId) {\n      sourceCards.splice(destination.index, 0, removed);\n      const newColumns = columns.map(col =>\n        col.id.toString() === source.droppableId ? { ...col, cards: sourceCards } : col\n      );\n      setColumns(newColumns);\n      // Aqui faríamos a chamada à API para persistir a nova ordem\n    } else { // Movendo para outra coluna\n      const destCards = [...destCol.cards];\n      destCards.splice(destination.index, 0, removed);\n      const newColumns = columns.map(col => {\n        if (col.id.toString() === source.droppableId) return { ...col, cards: sourceCards };\n        if (col.id.toString() === destination.droppableId) return { ...col, cards: destCards };\n        return col;\n      });\n      setColumns(newColumns);\n      \n      // Salva a mudança no backend\n      axios.put(`${API_URL}/cards/${removed.id}/move`, {\n        newColumnId: destination.droppableId,\n        newOrder: destination.index\n      }).catch(err => console.error(\"Failed to move card\", err));\n    }\n  };\n\n  return (\n    <div className=\"flex p-4 space-x-4\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        {columns.map(column => (\n          <Droppable droppableId={column.id.toString()} key={column.id}>\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"bg-gray-200 p-3 rounded-lg w-72 flex-shrink-0\"\n              >\n                <h2 className=\"font-bold mb-3\">{column.title}</h2>\n                {column.cards.map((card, index) => (\n                  <Draggable key={card.id} draggableId={card.id.toString()} index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className=\"bg-white p-2 mb-2 rounded shadow\"\n                      >\n                        {card.content}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}